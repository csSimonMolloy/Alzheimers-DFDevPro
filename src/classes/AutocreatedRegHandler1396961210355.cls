/******************************************************************************************
 *  Cloud Symphony
 *  
 *  Purpose : Registration / Login handler APEX class for Facebook authentication
 *			  
 *  Author  : CSL
 *  Date    : 08-04-2014
 *  Version : 1.0
 *
 *  Description:	This autogenerated class includes the basics for a Registration
 *					Handler class. It has been modified to allow login using Facebook    	
 *               
 *  Modification History
 *  Date            Who         Description 
 *            
*******************************************************************************************/
//TODO:This autogenerated class includes the basics for a Registration
//Handler class. You will need to customize it to ensure it meets your needs and
//the data provided by the third party.

global class AutocreatedRegHandler1396961210355 implements Auth.RegistrationHandler{

global final String PORTAL_ACCOUNT_NAME = '** PORTAL REGISTRATION ACCOUNT **';

global boolean canCreateUser(Auth.UserData data) {
    system.debug('*** -- Into canCreateUser with ' + data.email + ' -- ***');
    //TODO: Check whether we want to allow creation of a user with this data
    //Set<String> s = new Set<String>{'usernamea', 'usernameb', 'usernamec'};
    //if(s.contains(data.username)) {
        //return true;
    //}
    return false;
}

global User createUser(Id portalId, Auth.UserData data){
    system.debug('*** -- Into createUser with ' + data.email + ' -- ***');
    //We don't need the createUser method, as we never register using Facebook
    //but we still need to return a user otherwise the process halts    
    
    User u = [select u.Id, u.UserName, u.CommunityNickname, u.FirstName, u.LastName, u.Email, u.Alias from User u where u.Email = :data.email LIMIT 1];
    system.debug('*** -- Found user ' + u.UserName + ' -- ***');
    return u;
}

global void updateUser(Id userId, Id portalId, Auth.UserData data){
    User u = new User(id=userId);
    //TODO: Customize the username. Must be 80 characters or less.
    u.username = data.email;
    u.email = data.email;
    u.lastName = data.lastName;
    u.firstName = data.firstName;
    String alias = data.firstName.substring(0,1) + data.lastName.substring(0,4);
    //Alias must be 8 characters or less
    if(alias.length() > 8) {
        alias = alias.substring(0, 8);
    }
    u.alias = alias;
    u.CommunityNickname = data.email;
    update(u);
}
}